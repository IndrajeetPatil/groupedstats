# API for groupedstats package

## Exported functions

grouped_aov(data, grouping.vars, formula, effsize = "eta", output = "tidy", ...)
grouped_glm(data, grouping.vars, ..., output = "tidy", tidy.args = list(conf.int = TRUE, conf.level = 0.95), augment.args = list())
grouped_glmer(data, grouping.vars, ..., output = "tidy", tidy.args = list(conf.int = TRUE, conf.level = 0.95, effects = "fixed", conf.method = "Wald"), augment.args = list())
grouped_lm(data, grouping.vars, ..., output = "tidy", tidy.args = list(conf.int = TRUE, conf.level = 0.95), augment.args = list())
grouped_lmer(data, grouping.vars, ..., output = "tidy", tidy.args = list(conf.int = TRUE, conf.level = 0.95, effects = "fixed", conf.method = "Wald"), augment.args = list())
grouped_proptest(data, grouping.vars, measure, ...)
grouped_slr(data, dep.vars, indep.vars, grouping.vars)
grouped_summary(data, grouping.vars, measures = NULL, measures.type = "numeric", topcount.long = FALSE, k = 2L, ...)
grouped_ttest(data, dep.vars, indep.vars, grouping.vars, paired = FALSE, var.equal = FALSE)
grouped_wilcox(data, dep.vars, indep.vars, grouping.vars, paired = FALSE, correct = TRUE)
lm_effsize_ci(object, effsize = "eta", partial = TRUE, conf.level = 0.95, ...)
lm_effsize_standardizer(object, effsize = "eta", partial = TRUE, conf.level = 0.95, ...)

## Reexported objects

broomExtra::grouped_augment
broomExtra::grouped_glance
broomExtra::grouped_tidy
